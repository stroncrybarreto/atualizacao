<?xml version='1.0' encoding='iso8859-1'?>
<relatorio ts="2008-11-05 11:12:12" versao_xml="0.1"><tela titulo="Contas a Receber por Cliente">
  <quadro titulo="Parametros">
    <procura id="empresa" modelo="empresa" titulo="Empresa" />
    <procura id="conta" modelo="conta" titulo="Conta" />
    <procura id="cliente" modelo="cliente" titulo="Cliente" />
    <procura id="grupo" modelo="grupo_pessoa" titulo="Grupo cliente" />
    <caixa>
      <campo id="juros" tipo="valor" titulo="Juros ao dia" />
      <campo id="estado" tipo="texto" titulo="           Estado" />
      <campo id="cliente_ini" tipo="texto" titulo="   Nome cliente" />
      <campo id="cliente_fim" tipo="texto" titulo="                    à" />
    </caixa>
    <caixa>
      <rotulo titulo="Tipo Pessoa:    " />
      <check id="ck_cliente" titulo="Cliente" />
      <check id="ck_fornecedor" titulo="Fornecedor" />
      <check id="ck_funcionario" titulo="Funcionario" />
    </caixa>
  </quadro>
  <quadro titulo="Data">
    <campo id="vencto" modelo="periodo" titulo="Vencimento" />
    <campo id="emissao" modelo="periodo" titulo="Emissão" />
    <campo id="data" requerido="sim" tipo="data" titulo="Ref. atraso" valor_padrao="select current_date" />
  </quadro>
  <quadro titulo="Exibir">
    <selecao id="exibir" origem="VALUES (1, &apos;Contas a receber&apos;), (2, &apos;Contas a receber em atraso&apos;)" requerido="sim" titulo="Exibir" />
    <selecao id="ordenar" origem="VALUES (1, &apos;Emissao&apos;), (2, &apos;Vencimento&apos;), (3, &apos;Documento&apos;), (4, &apos;Valor&apos;)" requerido="sim" titulo="Ordenar" />
    <selecao id="agrupar" origem="VALUES (1, &apos;Cliente&apos;), (2, &apos;Grupo de Clientes&apos;), (3, &apos;Vencimento&apos;), (4, &apos;Tipo&apos;)" titulo="Agrupar" />
  </quadro>
</tela><ajuda>&lt;b&gt; Relatório de Contas a Receber por Cliente &lt;/b&gt;</ajuda><layout dados="select  
     rd.*, 
     (case when ($juros is not null  
               and $juros &gt; 0.0  
               and rd.dias_atraso &gt; 0) then (rd.valor + rd.valor_juros) else (rd.valor) end) as valor_atual, 
     &apos;CONTAS A RECEBER - DETALHADO&apos; as titulo1 
from 
     ((select r.*, 
               (substring(upper((string_to_array(r.motivo_nome, &apos; &apos;)::text[])[1]) 
                    from 
                         1 
                    for 
                         3) || &apos; &apos; || substring(upper((string_to_array(r.motivo_nome, &apos; &apos;)::text[])[2]) 
                    from 
                         1 
                    for 
                         3))::text as motivo_nome_abrv, 
               (case when ($juros is not null and $juros &gt; 0.0 and r.dias_atraso &gt; 0) then (round(((r.valor * $juros/100) * r.dias_atraso)::numeric, 2)) else 0.0 end) as valor_juros 
          from 
               (select distinct m.grid::text, 
                    m.grid::text as grid_aux, 
                    pe.nome::text as empresa_nome, 
                    gp.codigo::text as grupo_codigo, 
                    gp.grid::text as grupo, 
                    gp.nome::text as grupo_nome, 
                    m.data::date as emissao, 
                    m.pessoa::text, 
                    p.codigo::text as pessoa_codigo, 
                    p.estado::text as pessoa_estado, 
                    p.nome::text as pessoa_nome, 
                    p.fone::text as pessoa_fone, 
                    p.celular::text as pessoa_celular, 
                    p.contato::text as pessoa_contato, 
                    m.valor, 
                    m.vencto::date, 
                    tpg.nome::text as tabela_preco_grupo, 
                    m.documento::text, 
                    (date(now())-m.vencto) as dias_atraso, 
                    c.nome::text as conta_nome, 
                    tp.nome::text as tabela_preco_pessoa, 
                    mm.nome::text as motivo_nome, 
                    m.mlid::text, 
                    pc.lim_credito::text as valor_limite, 
                    tpg.tipo::text as tabela_preco_tipo_grupo, 
                    tp.tipo::text as tabela_preco_tipo_pessoa, 
                    (case when pc.lim_credito &lt; 0 then &apos;SIM&apos; else &apos;NAO&apos; end)::text as negativado, 
                    (select cp.nome 
                    from 
                         movto mp join movto_map mmp on (mp.grid=mmp.parent) join conta cp on (mp.conta_debitar=cp.codigo) 
                    where 
                         mmp.child=m.grid and cp.tipo_conta_receber is true 
                    limit 1)::text as conta_pai_nome 
               from 
                    movto m 
                         join pessoa p on (m.pessoa=p.grid) 
                         left join pessoa pe on (m.empresa=pe.grid) 
                         left join pessoa_conta pc on (p.grid=pc.pessoa) 
                         join conta c on (m.conta_debitar=c.codigo) 
                         join grupo_pessoa gp on (gp.grid=p.grupo) 
                         left join motivo_movto mm on (m.motivo=mm.grid) 
                         left join movto_info mi on (m.grid=mi.movto and mi.tipo=&apos;desconto&apos;) 
                         left join tabela_preco tp on (p.tabela_preco=tp.grid) 
                         left join tabela_preco tpg on (gp.tabela_preco=tpg.grid) 
               where 
                    (m.child = 0)  
                    and c.tipo_conta_receber  
                    and (case when $empresa is null then true else m.empresa = $empresa end)  
                    and (case when $conta is null then true else m.conta_debitar = $conta end)  
                    and (case when $cliente is null then (case when $grupo is null then true else p.grupo = $grupo end) else m.pessoa = $cliente end)  
                    and (case when $estado = &apos;&apos; then true else p.estado = $estado end)  
                    and (case when $cliente_ini != &apos;&apos; and $cliente_fim != &apos;&apos; then (p.nome between $cliente_ini and $cliente_fim) else true end)  
                    and (case when ($emissao_ini is not null and $emissao_fim is not null) then (m.data between $emissao_ini::date and $emissao_ini::date) when ($emissao_ini is not null) then (m.data = $emissao_ini::date) when ($emissao_fim is not null) then (m.data = $emissao_fim::date) else true end)  
                    and (case when ($vencto_ini is not null and $vencto_fim is not null) then (m.vencto between $vencto_ini::date and $vencto_ini::date) when ($vencto_ini is not null) then (m.vencto = $vencto_ini::date) when ($vencto_fim is not null) then (m.vencto = $vencto_fim::date) else true end)  
                    and ((case when $ck_cliente = 1 then (p.tipo like &apos;%C%&apos;) else false end) or (case when $ck_fornecedor = 1 then (p.tipo like &apos;%F%&apos;) else false end) or (case when $ck_funcionario = 1 then (p.tipo like &apos;%U%&apos;) else false end) or (case when ($ck_fornecedor = 0 and $ck_cliente = 0 and $ck_funcionario = 0) then true else false end))) as r 
          where 
               (case when ($agrupar = 1 and $ordenar = 4) then false else true end) ) 
union all 
(select r.*, 
               null as motivo_nome_abrv, 
               (case when ($juros is not null and $juros &gt; 0.0 and r.dias_atraso &gt; 0) then (round(((r.valor * $juros/100)*r.dias_atraso)::numeric, 2)) else 0.0 end) as valor_juros 
          from 
               (select distinct null::text as grid, 
                    m.grid::text as grid_aux, 
                    null::text as empresa_nome, 
                    null::text as grupo_codigo, 
                    null::text as grupo, 
                    null::text as grupo_nome, 
                    null::date as emissao, 
                    m.pessoa::text, 
                    p.codigo::text as pessoa_codigo, 
                    null::text as pessoa_estado, 
                    p.nome::text as pessoa_nome, 
                    null::text as pessoa_fone, 
                    null::text as pessoa_celular, 
                    null::text as pessoa_contato, 
                    sum(m.valor) as valor, 
                    (null)::date as vencto, 
                    null::text as tabela_preco_grupo, 
                    null::text as documento, 
                    0 as dias_atraso, 
                    null::text as conta_nome, 
                    null::text as tabela_preco_pessoa, 
                    null::text as motivo_nome, 
                    null::text as mlid, 
                    null::text as valor_limite, 
                    null::text as tabela_preco_tipo_grupo, 
                    null::text as tabela_preco_tipo_pessoa, 
                    null::text as negativado, 
                    null::text as conta_pai_nome 
               from 
                    movto m 
                         join pessoa p on (m.pessoa=p.grid) 
                         left join pessoa pe on (m.empresa=pe.grid) 
                         left join pessoa_conta pc on (p.grid=pc.pessoa) 
                         join conta c on (m.conta_debitar=c.codigo) 
                         join grupo_pessoa gp on (gp.grid=p.grupo) 
                         left join motivo_movto mm on (m.motivo=mm.grid) 
                         left join movto_info mi on (m.grid=mi.movto and mi.tipo=&apos;desconto&apos;) 
                         left join tabela_preco tp on (p.tabela_preco=tp.grid) 
                         left join tabela_preco tpg on (gp.tabela_preco=tpg.grid) 
               where 
                    (m.child = 0)  
                    and c.tipo_conta_receber  
                    and (case when $empresa is null then true else m.empresa = $empresa end)  
                    and (case when $conta is null then true else m.conta_debitar = $conta end)  
                    and (case when $cliente is null then (case when $grupo is null then true else p.grupo = $grupo end) else m.pessoa = $cliente end)  
                    and (case when $estado = &apos;&apos; then true else p.estado = $estado end)  
                    and (case when $cliente_ini != &apos;&apos; and $cliente_fim != &apos;&apos; then (p.nome between $cliente_ini and $cliente_fim) else true end)  
                    and (case when ($emissao_ini is not null and $emissao_fim is not null) then (m.data between $emissao_ini::date and $emissao_ini::date) when ($emissao_ini is not null) then (m.data = $emissao_ini::date) when ($emissao_fim is not null) then (m.data = $emissao_fim::date) else true end)  
                    and (case when ($vencto_ini is not null and $vencto_fim is not null) then (m.vencto between $vencto_ini::date and $vencto_ini::date) when ($vencto_ini is not null) then (m.vencto = $vencto_ini::date) when ($vencto_fim is not null) then (m.vencto = $vencto_fim::date) else true end)  
                    and ((case when $ck_cliente = 1 then (p.tipo like &apos;%C%&apos;) else false end) or (case when $ck_fornecedor = 1 then (p.tipo like &apos;%F%&apos;) else false end) or (case when $ck_funcionario = 1 then (p.tipo like &apos;%U%&apos;) else false end) or (case when ($ck_fornecedor = 0 and $ck_cliente = 0 and $ck_funcionario = 0) then true else false end)) 
               group by 
                    m.pessoa, 
                    m.grid, 
                    p.codigo, 
                    p.nome 
               order by 
                    valor desc ) as r 
          where 
               (case when ($agrupar = 1 and $ordenar = 4) then true else false end) ) ) as rd" id="566b934ac444c34007c80684bcce4e52" ordem="emissao" titulo="detalhado"><apelidos>1  rel_posto_nome       tam=60
2  rel_data_hora        tam=18              
3  titulo1              tam=83	alinha=centro
4  titulo2              tam=83	alinha=centro
5  pessoa_codigo        tam=5	alinha=direita
6  pessoa_nome          tam=31
7  vencto               tam=10	fmt=data
8  documento            tam=10
9  motivo_nome_abrv     tam=7
10 valor                tam=10	fmt=%.02f
11 dias_atraso          tam=4	fmt=%d		nulo
12 saldo                tam=12	fmt=%.02f	func=soma	campo=valor_atual	grupo=1
13 pessoa_fone          tam=15
14 pessoa_celular		tam=15
15 pessoa_contato		tam=12
16 total                tam=12	fmt=%.02f	func=soma	campo=valor_atual
17 emissao              tam=10	fmt=data
18 tabela_preco			tam=20
19 grupo_nome			tam=30
20 valor_real			tam=8	fmt=%.02f
21 motivo_nome			tam=20
22 tabela_preco_tipo	tam=15</apelidos><cab_pagina>
#1                                                                   #2
-------------------------------------------------------------------------------------
   
#3
#4

</cab_pagina>
<cab_grupo nome="1" quebra="pessoa">
+------------------------------------------------+----------------------------------+
| Cliente: #5    #6                              | Fone: #13                        |
+------------+------------+------------+---------+------------+------+--------------+
|   Emissao  |   Vencto   | Documento  | Tipo    |      Valor | Dias |        Saldo |
+------------+------------+------------+---------+------------+------+--------------+
</cab_grupo>

<detalhe>
| #17        | #7         | #8         | #9      | #10        | #11  | #12          |
</detalhe>

<rod_grupo nome="1">
+------------+------------+------------+---------+------------+------+--------------+

</rod_grupo>

<rod_relat>
+--------------------------------------------------------------------+--------------+
| TOTAL                                                              | #16          |
+--------------------------------------------------------------------+--------------+
</rod_relat>

<rod_pagina>
+------------+------------+------------+---------+------------+------+------------+
</rod_pagina></layout><layout dados="select  
     rd.*, 
     (case when ($juros is not null  
               and $juros &gt; 0.0  
               and rd.dias_atraso &gt; 0) then (rd.valor + rd.valor_juros) else (rd.valor) end) as valor_atual, 
     &apos;CONTAS A RECEBER - DETALHADO COM JUROS&apos; as titulo1, 
     rd.valor as valor_real 
from 
     ((select r.*, 
               (substring(upper((string_to_array(r.motivo_nome, &apos; &apos;)::text[])[1]) 
                    from 
                         1 
                    for 
                         3) || &apos; &apos; || substring(upper((string_to_array(r.motivo_nome, &apos; &apos;)::text[])[2]) 
                    from 
                         1 
                    for 
                         3))::text as motivo_nome_abrv, 
               (case when ($juros is not null and $juros &gt; 0.0 and r.dias_atraso &gt; 0) then (round(((r.valor * $juros/100) * r.dias_atraso)::numeric, 2)) else 0.0 end) as valor_juros 
          from 
               (select distinct m.grid::text, 
                    m.grid::text as grid_aux, 
                    pe.nome::text as empresa_nome, 
                    gp.codigo::text as grupo_codigo, 
                    gp.grid::text as grupo, 
                    gp.nome::text as grupo_nome, 
                    m.data::date as emissao, 
                    m.pessoa::text, 
                    p.codigo::text as pessoa_codigo, 
                    p.estado::text as pessoa_estado, 
                    p.nome::text as pessoa_nome, 
                    p.fone::text as pessoa_fone, 
                    p.celular::text as pessoa_celular, 
                    p.contato::text as pessoa_contato, 
                    m.valor, 
                    m.vencto::date, 
                    tpg.nome::text as tabela_preco_grupo, 
                    m.documento::text, 
                    (date(now())-m.vencto) as dias_atraso, 
                    c.nome::text as conta_nome, 
                    tp.nome::text as tabela_preco_pessoa, 
                    mm.nome::text as motivo_nome, 
                    m.mlid::text, 
                    pc.lim_credito::text as valor_limite, 
                    tpg.tipo::text as tabela_preco_tipo_grupo, 
                    tp.tipo::text as tabela_preco_tipo_pessoa, 
                    (case when pc.lim_credito &lt; 0 then &apos;SIM&apos; else &apos;NAO&apos; end)::text as negativado, 
                    (select cp.nome 
                    from 
                         movto mp join movto_map mmp on (mp.grid=mmp.parent) join conta cp on (mp.conta_debitar=cp.codigo) 
                    where 
                         mmp.child=m.grid and cp.tipo_conta_receber is true 
                    limit 1)::text as conta_pai_nome 
               from 
                    movto m 
                         join pessoa p on (m.pessoa=p.grid) 
                         left join pessoa pe on (m.empresa=pe.grid) 
                         left join pessoa_conta pc on (p.grid=pc.pessoa) 
                         join conta c on (m.conta_debitar=c.codigo) 
                         join grupo_pessoa gp on (gp.grid=p.grupo) 
                         left join motivo_movto mm on (m.motivo=mm.grid) 
                         left join movto_info mi on (m.grid=mi.movto and mi.tipo=&apos;desconto&apos;) 
                         left join tabela_preco tp on (p.tabela_preco=tp.grid) 
                         left join tabela_preco tpg on (gp.tabela_preco=tpg.grid) 
               where 
                    (m.child = 0)  
                    and c.tipo_conta_receber  
                    and (case when $empresa is null then true else m.empresa = $empresa end)  
                    and (case when $conta is null then true else m.conta_debitar = $conta end)  
                    and (case when $cliente is null then (case when $grupo is null then true else p.grupo = $grupo end) else m.pessoa = $cliente end)  
                    and (case when $estado = &apos;&apos; then true else p.estado = $estado end)  
                    and (case when $cliente_ini != &apos;&apos; and $cliente_fim != &apos;&apos; then (p.nome between $cliente_ini and $cliente_fim) else true end)  
                    and (case when ($emissao_ini is not null and $emissao_fim is not null) then (m.data between $emissao_ini::date and $emissao_ini::date) when ($emissao_ini is not null) then (m.data = $emissao_ini::date) when ($emissao_fim is not null) then (m.data = $emissao_fim::date) else true end)  
                    and (case when ($vencto_ini is not null and $vencto_fim is not null) then (m.vencto between $vencto_ini::date and $vencto_ini::date) when ($vencto_ini is not null) then (m.vencto = $vencto_ini::date) when ($vencto_fim is not null) then (m.vencto = $vencto_fim::date) else true end)  
                    and ((case when $ck_cliente = 1 then (p.tipo like &apos;%C%&apos;) else false end) or (case when $ck_fornecedor = 1 then (p.tipo like &apos;%F%&apos;) else false end) or (case when $ck_funcionario = 1 then (p.tipo like &apos;%U%&apos;) else false end) or (case when ($ck_fornecedor = 0 and $ck_cliente = 0 and $ck_funcionario = 0) then true else false end))) as r 
          where 
               (case when ($agrupar = 1 and $ordenar = 4) then false else true end) ) 
union all 
(select r.*, 
               null as motivo_nome_abrv, 
               (case when ($juros is not null and $juros &gt; 0.0 and r.dias_atraso &gt; 0) then (round(((r.valor * $juros/100)*r.dias_atraso)::numeric, 2)) else 0.0 end) as valor_juros 
          from 
               (select distinct null::text as grid, 
                    m.grid::text as grid_aux, 
                    null::text as empresa_nome, 
                    null::text as grupo_codigo, 
                    null::text as grupo, 
                    null::text as grupo_nome, 
                    null::date as emissao, 
                    m.pessoa::text, 
                    p.codigo::text as pessoa_codigo, 
                    null::text as pessoa_estado, 
                    p.nome::text as pessoa_nome, 
                    null::text as pessoa_fone, 
                    null::text as pessoa_celular, 
                    null::text as pessoa_contato, 
                    sum(m.valor) as valor, 
                    (null)::date as vencto, 
                    null::text as tabela_preco_grupo, 
                    null::text as documento, 
                    0 as dias_atraso, 
                    null::text as conta_nome, 
                    null::text as tabela_preco_pessoa, 
                    null::text as motivo_nome, 
                    null::text as mlid, 
                    null::text as valor_limite, 
                    null::text as tabela_preco_tipo_grupo, 
                    null::text as tabela_preco_tipo_pessoa, 
                    null::text as negativado, 
                    null::text as conta_pai_nome 
               from 
                    movto m 
                         join pessoa p on (m.pessoa=p.grid) 
                         left join pessoa pe on (m.empresa=pe.grid) 
                         left join pessoa_conta pc on (p.grid=pc.pessoa) 
                         join conta c on (m.conta_debitar=c.codigo) 
                         join grupo_pessoa gp on (gp.grid=p.grupo) 
                         left join motivo_movto mm on (m.motivo=mm.grid) 
                         left join movto_info mi on (m.grid=mi.movto and mi.tipo=&apos;desconto&apos;) 
                         left join tabela_preco tp on (p.tabela_preco=tp.grid) 
                         left join tabela_preco tpg on (gp.tabela_preco=tpg.grid) 
               where 
                    (m.child = 0)  
                    and c.tipo_conta_receber  
                    and (case when $empresa is null then true else m.empresa = $empresa end)  
                    and (case when $conta is null then true else m.conta_debitar = $conta end)  
                    and (case when $cliente is null then (case when $grupo is null then true else p.grupo = $grupo end) else m.pessoa = $cliente end)  
                    and (case when $estado = &apos;&apos; then true else p.estado = $estado end)  
                    and (case when $cliente_ini != &apos;&apos; and $cliente_fim != &apos;&apos; then (p.nome between $cliente_ini and $cliente_fim) else true end)  
                    and (case when ($emissao_ini is not null and $emissao_fim is not null) then (m.data between $emissao_ini::date and $emissao_ini::date) when ($emissao_ini is not null) then (m.data = $emissao_ini::date) when ($emissao_fim is not null) then (m.data = $emissao_fim::date) else true end)  
                    and (case when ($vencto_ini is not null and $vencto_fim is not null) then (m.vencto between $vencto_ini::date and $vencto_ini::date) when ($vencto_ini is not null) then (m.vencto = $vencto_ini::date) when ($vencto_fim is not null) then (m.vencto = $vencto_fim::date) else true end)  
                    and ((case when $ck_cliente = 1 then (p.tipo like &apos;%C%&apos;) else false end) or (case when $ck_fornecedor = 1 then (p.tipo like &apos;%F%&apos;) else false end) or (case when $ck_funcionario = 1 then (p.tipo like &apos;%U%&apos;) else false end) or (case when ($ck_fornecedor = 0 and $ck_cliente = 0 and $ck_funcionario = 0) then true else false end)) 
               group by 
                    m.pessoa, 
                    m.grid, 
                    p.codigo, 
                    p.nome 
               order by 
                    valor desc ) as r 
          where 
               (case when ($agrupar = 1 and $ordenar = 4) then true else false end) ) ) as rd" id="d2eeafc3addf41052413b8bd49bdb6db" ordem=" " titulo="detalhado com juros"><apelidos>1  rel_posto_nome       tam=60
2  rel_data_hora        tam=18
3  titulo1              tam=105	alinha=centro
4  titulo2              tam=105	alinha=centro
5  pessoa_codigo        tam=5	alinha=direita
6  pessoa_nome          tam=20
7  vencto               tam=10	fmt=data
8  documento            tam=10
9  motivo_nome_abrv     tam=7
10 valor                tam=9	fmt=%.02f
11 dias_atraso          tam=4	fmt=%d		nulo
12 valor_juros          tam=8	fmt=%.02f	nulo
13 valor_atual          tam=11	fmt=%.02f
14 saldo                tam=12	fmt=%.02f	func=soma	campo=valor_atual	grupo=1
15 pessoa_fone          tam=15
16 pessoa_celular       tam=15
17 pessoa_contato       tam=12
18 total_juros          tam=8	fmt=%.02f	func=soma	campo=valor_juros
19 total                tam=12	fmt=%.02f	func=soma	campo=valor_atual
20 emissao              tam=10	fmt=data
21 total_valor          tam=9	fmt=%.02f	func=soma	campo=valor
22 tabela_preco         tam=20
23 grupo_nome           tam=30
24 valor_real           tam=8	fmt=%.02f
25 motivo_nome          tam=20
26 tabela_preco_tipo    tam=15</apelidos><cab_pagina>
#1                                                                                       #2              
---------------------------------------------------------------------------------------------------------
   
#3
#4

</cab_pagina>
<cab_grupo nome="1" quebra="pessoa">
+---------------------------------------------------------------------------+---------------------------+
| Cliente: #5    #6                                                         | Fone: #15                 |
+------------+------------+-----------+---------+----------+------+---------+-------------+-------------+
| Emissao    | Vencto     | Documento | Tipo    |    Valor | Dias |   Juros |    Vl.Atual |       Saldo |
+------------+------------+-----------+---------+----------+------+---------+-------------+-------------+
</cab_grupo>

<detalhe>
| #20        | #7         | #8        | #9      |#10       | #11  |#12      | #13         |#14          |
</detalhe>

<rod_grupo nome="1">
+-------------------------------------------------------------------------------------------------------+

</rod_grupo>

<rod_relat>
+-----------------------------------------------+----------+------+---------+-------------+-------------+
| TOTAL                                         |#21       |      |#18      |             |#19          |
+-----------------------------------------------+----------+------+---------+-------------+-------------+
</rod_relat>

<rod_pagina>
+------------+------------+-----------+---------+----------+------+---------+-------------+-------------+
</rod_pagina></layout><layout dados="select  
     rd.*, 
     (case when ($juros is not null  
               and $juros &gt; 0.0  
               and rd.dias_atraso &gt; 0) then (rd.valor + rd.valor_juros) else (rd.valor) end) as valor_atual, 
     (&apos;CONTAS A RECEBER - EM ATRASO&apos;) as titulo1, 
     (&apos;&apos;) as titulo2 
from 
     (select r.*, 
          (substring(upper((string_to_array(r.motivo_nome, &apos; &apos;)::text[])[1]) 
               from 
                    1 
               for 
                    3) || &apos; &apos; || substring(upper((string_to_array(r.motivo_nome, &apos; &apos;)::text[])[2]) 
               from 
                    1 
               for 
                    3))::text as motivo_nome_abrv, 
          (case when ($juros is not null  
                    and $juros &gt; 0.0  
                    and r.dias_atraso &gt; 0) then (round(((r.valor * $juros/100) * r.dias_atraso)::numeric, 
                         2)) else 0.0 end) as valor_juros 
     from 
          (select gp.codigo as grupo_codigo, 
               gp.grid as grupo, 
               gp.nome as grupo_nome, 
               m.pessoa, 
               p.codigo as pessoa_codigo, 
               p.nome as pessoa_nome, 
               p.estado as pessoa_estado, 
               p.fone as pessoa_fone, 
               p.celular as pessoa_celular, 
               tp.tipo as tabela_preco_tipo_pessoa, 
               p.contato as pessoa_contato, 
               tp.nome as tabela_preco_pessoa, 
               tpg.nome as tabela_preco_grupo, 
               m.documento, 
               m.valor, 
               mi.info as desconto, 
               m.vencto, 
               m.data as emissao, 
               (($data::date)-m.vencto) as dias_atraso, 
               m.grid, 
               m.mlid, 
               (select sum(valor) 
               from 
                    movto 
               where 
                    child=m.grid  
                    and motivo in (select motivo 
                    from 
                         motivo_config 
                    where 
                         chave like &apos;DESCONTO_%&apos;)) as valor_desconto, 
               mm.nome as motivo_nome, 
               tpg.tipo as tabela_preco_tipo_grupo, 
               c.nome as conta_nome, 
               (select cp.nome 
               from 
                    movto mp 
                         join movto_map mmp on (mp.grid=mmp.parent) 
                         join conta cp on (mp.conta_debitar=cp.codigo) 
               where 
                    mmp.child=m.grid  
                    and cp.tipo_conta_receber is true 
               limit 1) as conta_pai_nome, 
               p.limite_credito 
          from 
               movto m 
                    join pessoa p on (m.pessoa=p.grid) 
                    join conta c on (m.conta_debitar=c.codigo) 
                    join grupo_pessoa gp on (gp.grid=p.grupo) 
                    left join motivo_movto mm on (m.motivo=mm.grid) 
                    left join movto_info mi on (m.grid=mi.movto  
                    and mi.tipo=&apos;desconto&apos;) 
                    left join tabela_preco tpg on (gp.tabela_preco=tpg.grid) 
                    left join tabela_preco tp on (p.tabela_preco=tp.grid) 
          where 
               (m.child = 0)  
               and c.tipo_conta_receber 
               and (case when ($emissao_ini is not null and $emissao_fim is not null) then (m.data between $emissao_ini::date and $emissao_ini::date) when ($emissao_ini is not null) then (m.data = $emissao_ini::date) when ($emissao_fim is not null) then (m.data = $emissao_fim::date) else true end)  
               and (case when ($vencto_ini is not null and $vencto_fim is not null) then (m.vencto between $vencto_ini::date and $vencto_ini::date) when ($vencto_ini is not null) then (m.vencto = $vencto_ini::date) when ($vencto_fim is not null) then (m.vencto = $vencto_fim::date) when ($data is not null) then (m.vencto &lt; $data::date) else true end)  
               and (case when $empresa is null then true else m.empresa = $empresa end)  
               and (case when $conta is null then true else m.conta_debitar = $conta end)  
               and (case when $cliente is null then true else m.pessoa = $cliente end) 
               and (case when $grupo is null then true else p.grupo = $grupo end)
               and (case when $estado = &apos;&apos; then true else p.estado = $estado end)  
               and (case when $cliente_ini != &apos;&apos;  
                    and $cliente_fim != &apos;&apos; then (p.nome between $cliente_ini and $cliente_fim) else true end)  
               and (case when $ck_cliente = 1 then (p.tipo like &apos;%C%&apos;) else true end)  
               and (case when $ck_fornecedor = 1 then (p.tipo like &apos;%F%&apos;) else true end)  
               and (case when $ck_funcionario = 1 then (p.tipo like &apos;%U%&apos;) else true end) ) as r) as rd 
limit 400" id="cb21b1401b6bb7246c276675d988c3ca" ordem=" " titulo="em atraso"><apelidos>1  rel_posto_nome       tam=60
2  rel_data_hora        tam=18
3  titulo1              tam=86  alinha=centro
4  titulo2              tam=86  alinha=centro
5  pessoa_codigo        tam=5   alinha=direita
6  pessoa_nome          tam=30
7  vencto               tam=10  fmt=data
8  documento            tam=10
9  motivo_nome_abrv     tam=7
10 valor                tam=10  fmt=%.02f
11 dias_atraso          tam=4   fmt=%d
12 saldo                tam=12  fmt=%.02f	func=soma	campo=valor_atual	grupo=1
13 pessoa_fone          tam=15
14 total                tam=12  fmt=%.02f	func=soma	campo=valor_atual
15 emissao              tam=10  fmt=data
16 pessoa_celular       tam=15
17 pessoa_contato       tam=12
18 tabela_preco	        tam=20
18 grupo_nome           tam=30
19 valor_real           tam=8	fmt=%.02f
20 motivo_nome          tam=20
21 tabela_preco_tipo    tam=15</apelidos><cab_pagina>
#1                                                                     #2        
---------------------------------------------------------------------------------------
   
#3
#4

</cab_pagina>
<cab_grupo nome="1" quebra="pessoa">

+-------------------------------------------------------------+----------------------+
| Cliente: #5    #6                                           | Fone: #13            |
+------------+------------+------------+---------+------------+------+---------------+
| Emissão    | Vencto     | Documento  | Tipo    |      Valor | Dias |         Saldo |
+------------+------------+------------+---------+------------+------+---------------+
</cab_grupo>

<detalhe>
| #15        | #7         | #8         | #9      | #10        | #11  | #12           |
</detalhe>

<rod_grupo nome="1">
+------------------------------------------------------------------------------------+
</rod_grupo>

<rod_relat>

+--------------------------------------------------------------------+---------------+
| TOTAL                                                              | #14           |
+--------------------------------------------------------------------+---------------+
</rod_relat>

<rod_pagina>
+------------+------------+------------+---------+------------+------+---------------+
</rod_pagina></layout><layout dados="select  
     rd.*, 
     (case when ($juros is not null  
               and $juros &gt; 0.0  
               and rd.dias_atraso &gt; 0) then (rd.valor + rd.valor_juros) else (rd.valor) end) as valor_atual, 
     (&apos;CONTAS A RECEBER - EM ATRASO&apos;) as titulo1, 
     (&apos;&apos;) as titulo2 
from 
     (select r.*, 
          (substring(upper((string_to_array(r.motivo_nome, &apos; &apos;)::text[])[1]) 
               from 
                    1 
               for 
                    3) || &apos; &apos; || substring(upper((string_to_array(r.motivo_nome, &apos; &apos;)::text[])[2]) 
               from 
                    1 
               for 
                    3))::text as motivo_nome_abrv, 
          (case when ($juros is not null  
                    and $juros &gt; 0.0  
                    and r.dias_atraso &gt; 0) then (round(((r.valor * $juros/100) * r.dias_atraso)::numeric, 
                         2)) else 0.0 end) as valor_juros 
     from 
          (select gp.codigo as grupo_codigo, 
               gp.grid as grupo, 
               gp.nome as grupo_nome, 
               m.pessoa, 
               p.codigo as pessoa_codigo, 
               p.nome as pessoa_nome, 
               p.estado as pessoa_estado, 
               p.fone as pessoa_fone, 
               p.celular as pessoa_celular, 
               tp.tipo as tabela_preco_tipo_pessoa, 
               p.contato as pessoa_contato, 
               tp.nome as tabela_preco_pessoa, 
               tpg.nome as tabela_preco_grupo, 
               m.documento, 
               m.valor, 
               mi.info as desconto, 
               m.vencto, 
               m.data as emissao, 
               (($data::date)-m.vencto) as dias_atraso, 
               m.grid, 
               m.mlid, 
               (select sum(valor) 
               from 
                    movto 
               where 
                    child=m.grid  
                    and motivo in (select motivo 
                    from 
                         motivo_config 
                    where 
                         chave like &apos;DESCONTO_%&apos;)) as valor_desconto, 
               mm.nome as motivo_nome, 
               tpg.tipo as tabela_preco_tipo_grupo, 
               c.nome as conta_nome, 
               (select cp.nome 
               from 
                    movto mp 
                         join movto_map mmp on (mp.grid=mmp.parent) 
                         join conta cp on (mp.conta_debitar=cp.codigo) 
               where 
                    mmp.child=m.grid  
                    and cp.tipo_conta_receber is true 
               limit 1) as conta_pai_nome, 
               p.limite_credito 
          from 
               movto m 
                    join pessoa p on (m.pessoa=p.grid) 
                    join conta c on (m.conta_debitar=c.codigo) 
                    join grupo_pessoa gp on (gp.grid=p.grupo) 
                    left join motivo_movto mm on (m.motivo=mm.grid) 
                    left join movto_info mi on (m.grid=mi.movto  
                    and mi.tipo=&apos;desconto&apos;) 
                    left join tabela_preco tpg on (gp.tabela_preco=tpg.grid) 
                    left join tabela_preco tp on (p.tabela_preco=tp.grid) 
          where 
               (m.child = 0)  
               and c.tipo_conta_receber  
               and (case when $empresa is null then true else m.empresa = $empresa end)  
               and (case when $conta is null then true else m.conta_debitar = $conta end)  
               and (case when $cliente is null then (case when $grupo is null then true else p.grupo = $grupo end) else m.pessoa = $cliente end)  
               and (case when $estado = &apos;&apos; then true else p.estado = $estado end)  
               and (case when $cliente_ini != &apos;&apos;  
                    and $cliente_fim != &apos;&apos; then (p.nome between $cliente_ini and $cliente_fim) else true end)  
               and (case when ($emissao_ini is not null and $emissao_fim is not null) then (m.data between $emissao_ini::date and $emissao_ini::date) when ($emissao_ini is not null) then (m.data = $emissao_ini::date) when ($emissao_fim is not null) then (m.data = $emissao_fim::date) else true end)  
               and (case when ($vencto_ini is not null and $vencto_fim is not null) then (m.vencto between $vencto_ini::date and $vencto_ini::date) when ($vencto_ini is not null) then (m.vencto = $vencto_ini::date) when ($vencto_fim is not null) then (m.vencto = $vencto_fim::date) when ($data is not null) then (m.vencto &lt; $data::date) else true end)  
               and (case when $ck_cliente = 1 then (p.tipo like &apos;%C%&apos;) else true end)  
               and (case when $ck_fornecedor = 1 then (p.tipo like &apos;%F%&apos;) else true end)  
               and (case when $ck_funcionario = 1 then (p.tipo like &apos;%U%&apos;) else true end) ) as r) as rd 
limit 10" id="ee020f19f31849d0df3d867889ed4a5d" ordem=" " titulo="em atraso com juros"><apelidos>1  rel_posto_nome       tam=60
2  rel_data_hora        tam=18
3  titulo1              tam=104	alinha=centro
4  titulo2              tam=104	alinha=centro
5  pessoa_codigo        tam=5	alinha=direita
6  pessoa_nome          tam=50
7  vencto               tam=10	fmt=data
8  documento            tam=10
9  motivo_nome_abrv     tam=7
10 valor                tam=8	fmt=%.02f
11 dias_atraso          tam=4 	fmt=%d
12 valor_juros          tam=8 	fmt=%.02f
13 valor_atual          tam=10	fmt=%.02f
14 saldo                tam=12 	fmt=%.02f	func=soma	campo=valor_atual	grupo=1
15 pessoa_fone          tam=15
16 pessoa_celular		tam=15
17 pessoa_contato		tam=12
18 total_juros          tam=8 	fmt=%.02f	func=soma	campo=valor_juros
19 total                tam=12 	fmt=%.02f	func=soma	campo=valor_atual
20 emissao              tam=10  fmt=data
21 total_valor          tam=8	fmt=%.02f	func=soma	campo=valor
22 tabela_preco			tam=20
23 tabela_preco			tam=20
24 grupo_nome			tam=30
25 valor_real			tam=8	fmt=%.02f
26 motivo_nome			tam=20
27 tabela_preco_tipo	tam=15</apelidos><cab_pagina>
#1                                                                                      #2              
--------------------------------------------------------------------------------------------------------
   
#3
#4
   
</cab_pagina>
<cab_grupo nome="1" quebra="pessoa">
+---------------------------------------------------------------------------+--------------------------+
| Cliente: #5    #6                                                         | Fone: #15                |
+------------+------------+-----------+---------+----------+------+---------+------------+-------------+
| Emissao    | Vencto     | Documento | Tipo    |    Valor | Dias |   Juros |   Vl.Atual |       Saldo |
+------------+------------+-----------+---------+----------+------+---------+------------+-------------+
</cab_grupo>

<detalhe>
| #20        | #7         | #8        | #9      | #10      | #11  |#12      | #13        |#14          |
</detalhe>

<rod_grupo nome="1">
+------------+------------+-----------+---------+----------+------+---------+------------+-------------+

</rod_grupo>

<rod_relat>

+-----------------------------------------------+----------+------+---------+------------+-------------+
| TOTAL                                         | #21      |      |#18      |            |#19          |
+-----------------------------------------------+----------+------+---------+------------+-------------+
</rod_relat>

<rod_pagina>
+------------+------------+-----------+---------+----------+------+---------+------------+-------------+
</rod_pagina></layout></relatorio>
